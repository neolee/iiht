- modal_id = (locals[:mode] == 'new' ? 'modalNew' : 'modalEdit')
- modal_title = (locals[:mode] == 'new' ? 'New' : 'Edit')
- form_id = (locals[:mode] == 'new' ? 'formNew' : 'formPost')
- form_action = (locals[:mode] == 'new' ? url_for('/posts/') : url_for("/posts/#{@post.id}"))
- form_method = (locals[:mode] == 'new' ? 'post' : 'patch')
- form_title = (locals[:mode] == 'new' ? '' : @post.title)
- form_body = (locals[:mode] == 'new' ? '' : @post.body)
- commit_id = (locals[:mode] == 'new' ? 'btnCreate' : 'btnSave')
- commit_label = (locals[:mode] == 'new' ? 'Create' : 'Save')
- alert_id = (locals[:mode] == 'new' ? 'alertCreate' : 'alertSave')

.modal{:id => modal_id}
  .modal-header
    .close(data-dismiss="modal")x
    %h3= modal_title
  .modal-body
    %form.form-horizontal{:id => form_id, :action => form_action, :method => form_method}
      %fieldset
        .control-group
          %label{:for => "title"} If I have time
          .controls
            %input.input-xxlarge#title{:type => "text", :name => "title", :value => form_title, :autofocus => "autofocus"}
            %p.help-block What do you wanna do?
        .control-group
          %label{:for => "body"} which means
          .controls
            %textarea.input-xxlarge#body{:rows => "10", :name => "body"}= form_body
            %p.help-block (Optional) details for that?
  .modal-footer
    .alert.alert-info{:id => alert_id}
    %a.btn#btnClose(data-dismiss="modal")Close
    %a.btn.btn-primary{:id => commit_id}= commit_label

:javascript
  $("##{form_id}").validate({
      rules: {
          title: "required",
      }
  });

  $('##{commit_id}').click(function(event) {
      if($('##{form_id}').valid() == false) return false;
    
      $('##{alert_id}').removeClass('alert-success alert-error').addClass('alert-info');
      $('##{alert_id}').show().text('Saving...');

      $.ajax({
          type: $('##{form_id}').attr('method'),
          url: $('##{form_id}').attr('action'),
          data: $('##{form_id}').serialize(),
          success: function(data) {
              $('##{alert_id}').removeClass('alert-info').addClass('alert-success');
              $('##{alert_id}').text('Saved').fadeOut('slow');
              if ('#{locals[:mode]}' == 'new') {
                  location = '/';
              }
              else {
                  location.reload();
              }
          },
          error: function(data) {
              switch(data.status)
              {
                  case 401:
                  errorMsg = 'You are not authorized to do this.'
                  break;
                  case 304:
                  errorMsg = 'Nothing changed.'
                  break;
                  case 400:
                  errorMsg = 'Cannot save changes [Error: ' + data.responseText + '].'
                  break;
                  default:
                  errorMsg = 'Failed [Error code: ' + data.status + '].'
              }

              $('##{alert_id}').removeClass('alert-info').addClass('alert-error');
              $('##{alert_id}').text(errorMsg);
          },
      });

      return false;
  });